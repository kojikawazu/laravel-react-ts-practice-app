services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: laravel-app
    restart: unless-stopped # コンテナが停止された場合、手動で停止しない限り再起動
    working_dir: /var/www
    volumes:
      - .:/var/www # ホストの現在のディレクトリをコンテナの/var/wwwにマウント
      - ./vendor:/var/www/vendor # ホストのvendorディレクトリをコンテナの/var/www/vendorにマウント
      - ./storage:/var/www/storage # ホストのstorageディレクトリをコンテナの/var/www/storageにマウント
    networks:
      - app-network
    ports:
      - "8000:80"
      - "8080:8080"
    depends_on:
      - test_db
      - db

  db:
    image: postgres:13
    container_name: laravel-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: laravel_react_db
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
    volumes:
      - dbdata:/var/lib/postgresql/data # PostgreSQLデータを永続化するためのボリュームをマウント
    networks:
      - app-network
    ports:
      - "5432:5432" # PostgreSQLのポートをマッピング

  test_db:
    image: postgres:13
    container_name: laravel_test_db
    restart: unless-stopped
    environment:
      POSTGRES_DB: laravel_test_db
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
    volumes:
      - testdbdata:/var/lib/postgresql/data
    networks:
      - app-network
    ports:
      - "5433:5432"

  adminer:
    image: adminer # Adminerイメージ（phpMyAdminの代替として使用）
    container_name: adminer
    restart: unless-stopped
    environment:
      ADMINER_DEFAULT_SERVER: db
    ports:
      - "8090:8080" # Adminerのポートをマッピング
    depends_on:
      - test_db
      - db
    networks:
      - app-network

networks:
  app-network:      # ネットワークの定義
    driver: bridge  # ブリッジネットワークドライバーを使用

volumes:
  dbdata:           # ボリュームの定義
    driver: local   # ローカルボリュームドライバーを使用
  testdbdata:
    driver: local
