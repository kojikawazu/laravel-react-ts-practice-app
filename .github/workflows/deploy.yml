name: Deploy to ConoHa

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.CONOHA_SSH_KEY }}

      - name: Copy files to ConoHa
        run: |
          rsync -avz --exclude '.git' --exclude 'node_modules' -e "ssh -p ${{ secrets.CONOHA_PORT }}" . ${{ secrets.CONOHA_USER }}@${{ secrets.CONOHA_HOST }}:/path/to/your/app

      - name: Deploy on ConoHa
        run: |
          ssh -p ${{ secrets.CONOHA_PORT }} -o StrictHostKeyChecking=no ${{ secrets.CONOHA_USER }}@${{ secrets.CONOHA_HOST }} << 'EOF'
            cd /path/to/your/app
            echo "APP_NAME=${{ secrets.APP_NAME }}" > .env
            echo "APP_ENV=${{ secrets.APP_ENV }}" >> .env
            echo "APP_KEY=${{ secrets.APP_KEY }}" >> .env
            echo "APP_DEBUG=${{ secrets.APP_DEBUG }}" >> .env
            echo "APP_TIMEZONE=${{ secrets.APP_TIMEZONE }}" >> .env
            echo "APP_URL=${{ secrets.APP_URL }}" >> .env
            echo "APP_LOCALE=${{ secrets.APP_LOCALE }}" >> .env
            echo "APP_FALLBACK_LOCALE=${{ secrets.APP_FALLBACK_LOCALE }}" >> .env
            echo "APP_FAKER_LOCALE=${{ secrets.APP_FAKER_LOCALE }}" >> .env
            echo "APP_MAINTENANCE_DRIVER=${{ secrets.APP_MAINTENANCE_DRIVER }}" >> .env
            echo "APP_MAINTENANCE_STORE=${{ secrets.APP_MAINTENANCE_STORE }}" >> .env
            echo "BCRYPT_ROUNDS=${{ secrets.BCRYPT_ROUNDS }}" >> .env
            echo "LOG_CHANNEL=${{ secrets.LOG_CHANNEL }}" >> .env
            echo "LOG_STACK=${{ secrets.LOG_STACK }}" >> .env
            echo "LOG_DEPRECATIONS_CHANNEL=${{ secrets.LOG_DEPRECATIONS_CHANNEL }}" >> .env
            echo "LOG_LEVEL=${{ secrets.LOG_LEVEL }}" >> .env
            echo "DB_CONNECTION=${{ secrets.DB_CONNECTION }}" >> .env
            echo "DB_HOST=${{ secrets.DB_HOST }}" >> .env
            echo "DB_PORT=${{ secrets.DB_PORT }}" >> .env
            echo "DB_DATABASE=${{ secrets.DB_DATABASE }}" >> .env
            echo "DB_USERNAME=${{ secrets.DB_USERNAME }}" >> .env
            echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env
            echo "SESSION_DRIVER=${{ secrets.SESSION_DRIVER }}" >> .env
            echo "SESSION_LIFETIME=${{ secrets.SESSION_LIFETIME }}" >> .env
            echo "SESSION_ENCRYPT=${{ secrets.SESSION_ENCRYPT }}" >> .env
            echo "SESSION_PATH=${{ secrets.SESSION_PATH }}" >> .env
            echo "SESSION_DOMAIN=${{ secrets.SESSION_DOMAIN }}" >> .env
            echo "BROADCAST_CONNECTION=${{ secrets.BROADCAST_CONNECTION }}" >> .env
            echo "FILESYSTEM_DISK=${{ secrets.FILESYSTEM_DISK }}" >> .env
            echo "QUEUE_CONNECTION=${{ secrets.QUEUE_CONNECTION }}" >> .env
            echo "CACHE_STORE=${{ secrets.CACHE_STORE }}" >> .env
            echo "MEMCACHED_HOST=${{ secrets.MEMCACHED_HOST }}" >> .env
            echo "REDIS_CLIENT=${{ secrets.REDIS_CLIENT }}" >> .env
            echo "REDIS_HOST=${{ secrets.REDIS_HOST }}" >> .env
            echo "REDIS_PASSWORD=${{ secrets.REDIS_PASSWORD }}" >> .env
            echo "REDIS_PORT=${{ secrets.REDIS_PORT }}" >> .env
            echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" >> .env
            echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> .env
            echo "AWS_DEFAULT_REGION=${{ secrets.AWS_DEFAULT_REGION }}" >> .env
